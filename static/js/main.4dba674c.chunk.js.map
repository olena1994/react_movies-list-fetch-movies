{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","BASE_URL","key","getMovie","title","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","setMovie","isTitleInput","setIsTitleInput","isMovieFound","setIsMovieFound","findMovie","movieFromServer","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","App","setMovies","some","currentMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dba674c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div>\n      {movie && (\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img\n                src={movie.Poster}\n                alt=\"Film logo\"\n              />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"images/imdb-logo.jpeg\"\n                    alt=\"imdb\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\">\n                <p className=\"title is-8\">{movie.Title}</p>\n              </div>\n            </div>\n\n            <div className=\"content\">\n              {movie.Plot}\n              <br />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","const BASE_URL = 'http://www.omdbapi.com';\nconst key = '/?apikey=7ff53734&t';\n\nexport async function getMovie(title: string) {\n  const response = await fetch(`${BASE_URL}${key}=${title}`);\n\n  return response.json();\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie | null) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isTitleInput, setIsTitleInput] = useState(true);\n  const [isMovieFound, setIsMovieFound] = useState(true);\n\n  const findMovie = async () => {\n    const movieFromServer = await getMovie(title);\n\n    if (movieFromServer.Response === 'False') {\n      setIsMovieFound(false);\n      setIsTitleInput(false);\n    } else {\n      setMovie(movieFromServer);\n      setIsMovieFound(true);\n    }\n  };\n\n  const handleInput = (event: any) => {\n    setTitle(event.target.value);\n    setIsTitleInput(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addMovie(movie);\n          setTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn('input', {\n                  'is-danger': !isMovieFound,\n                })}\n                value={title}\n                onChange={handleInput}\n              />\n            </div>\n          </label>\n\n          <p className=\"help is-danger\">\n            {!isTitleInput && (\n              'Can not find a movie with such a title'\n            )}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">\n          {`${isMovieFound ? 'Preview' : 'Movie not found'}`}\n        </h2>\n        {(isMovieFound && movie) && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie | null) => {\n    if (movie\n        && !movies.some(currentMovie => movie.imdbID === currentMovie.imdbID)) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}